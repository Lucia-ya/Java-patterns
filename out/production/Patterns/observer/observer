=======================================Observer - Наблюдатель===========================================================
Определение зависимостей "один ко многим" между объектами
Определение зависимостей "один ко многим" между объектами таким образом, чтобы изменении сотояния одного объекта
все зависящие от него объекты были уведомлены об этом и обновились
========================================================================================================================
Пример: Сайт с вакансиями и подписчики, которые должны получать уведомления когда вакансии добавляются или исчезают
Интерфейс Observer с медтодом handleEvent, который принимает коллекцию строк от реализации Observed
Интерфейс Observed с методами дабавления подписчика, удаления его, и отправки им коллекции строк - notifyObservers()
Реализация Observer - Subscriber. Поле имя, конструктор для него, реализация handleEvent - sout коллекцию и имя
Реализация Observed - JavaDeveloperJobSite - внутри коллекция строк с вакансиямии коллекция реализаций Observer.
Методы добавления и удаления вакансий, в нутри которых вызывается метод notifyObservers(), методы добавления и удаления
подписчиков. РРеализация notifyObservers() - с помощью foreach у всех наблюдателей вызывается метод handleEvent
с передачей коллекции вакансий
Клиент - Создаем сайт, добавляем туда ваканисии, создаем подписчиков, добавляем на сайт, добавляем и удаляем вакансии
смотрим что все работает
========================================================================================================================