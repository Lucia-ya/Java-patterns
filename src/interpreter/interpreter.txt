=================================Interpreter - интерпретатор============================================================
Определение представления грамматики объекта.
Определение преставления грамматики заланного языка и интерпретации его предложений
Упрощение иерархии классов с помощью интерпретирования.
========================================================================================================================
Необходимо просмотреть резюме разработчиков, и возможность вибирать из них того кто знает JavaCore, и того кто знает и
Java и Spring
Класс Expression - интерфейс для реализации логических выражений и реализации класса которого можно в этих выражениях
использовать:
Класс AndExpression Реализация Expression описывающий AND выражение. Принимает 2 экземпляра Expression, и проверяет что
каждый из них в методе interpret(String context) возвращает true.
Класс OrExpression Реализация Expression описывающий AND выражение. Принимает 2 экземпляра Expression, и проверяет что
хотя бы один из них в методе interpret(String context) возвращает true.
Класс TerminalExpression - Реализация Expression с String полем, передаваемым в конструктор представляет собой
"слово для поиска" в данном случае, назначаемое и настраиваемое в клиентском классе, экземпляры этого класса
в классе клиенте и передаются в конструкторы AndExpression и  OrExpression.
Клиент - InterpreterRunner, содержит Два статических метода  - для посика JavaCore и для поиска JavaEE разработчика,
в которых мы назначаем слова (передаем в логические конструкторы TerminalExpression с нужными нам словами), по которым
будет производиться поиск в резюме.
В main методе - создаем Or и AND Expression посредством созданных в клиенте методов, и для поиска просто передаем в
методы этих экземпляров строки.
========================================================================================================================


