=================Decorator - Декоратор=============================================
Альтернатива порождения подклассов - расширение функциональности объектов без применения наследования
============================================================================================================

1) Создание интерфейса Developer с методом makeJob()
2) Создания базовой реализация Интерфейса (Java Developer)
3) Создание декоратора - с полем Developer, конструктором, принимающим Developer и реализацией makeJob() {dev.makeJob()}
4) Создание наследника декоратора, добавление туда нового метода, и вызываем этот метод в makeJob()
    {return super.makeJob() + " " + makeCodeReview();
5) Создание еще одного наследника декоратора, добавление туда нового метода и вызываем этот метод в makeJob()
    {return super.makeJob() + " " + sendWeekReport();}
6) В классе клиенте создаем Developer developer = new JavaTeamLead(new SeniorJavaDeveloper(new JavaDeveloper()));